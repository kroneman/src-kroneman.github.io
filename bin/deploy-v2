#!/usr/bin/env bash

github_pages_repo=https://$PAGES_DEPLOYMENT_USER:$PAGES_DEPLOYMENT_TOKEN@github.com/kroneman/kroneman.github.io.git
local_build_folder=./dist
deployent_directory=$local_build_folder

declare -a local required_dirs=(
    $local_build_folder
);

# checks if build folder exists and destination folder exists
ensure_required_dirs() {
    for dir in ${required_dirs[@]}; do
        if [[ ! -d $dir ]]; then
            echo "$dir does not exist"
            exit 1;
        fi
    done
}

# Credit: Thanks David Walsh!
# https://davidwalsh.name/detect-git-directory
check_if_dir_is_git() {
    if git rev-parse --git-dir > /dev/null 2>&1; then
        git checkout master && git pull origin master
    else
        hg pull && hg checkout "last(public())"
    fi
}

# check if the dest is the target github pages repo
ensure_destination_folder_is_repo() {
    check_if_dir_is_git;
    declare local git_origin_url="$(git remote get-url origin)";

    if [[ $git_origin_url = $github_pages_repo ]]; then
        echo "is the right repository"
    else
        echo "is not the repository, cloning remote into current repo";
    fi

    echo "Current Working in directory: $(pwd)";
}

main() {
    ensure_required_dirs;

    cd $deployent_directory;
    echo "Current Working in directory: $(pwd)";

    git init;
    git config user.email $PAGES_DEPLOYMENT_EMAIL;
    git config user.name $PAGES_DEPLOYMENT_NAME;
    git remote remove origin &>/dev/null;
    git remote add origin $github_pages_repo &>/dev/null;

    ensure_destination_folder_is_repo

    git add .;
    git commit -m "Deployment: $(date)";
    git push -f --set-upstream origin master;
}

main;
